name: PIO

on:
  push:
    branches:
      - pio
    paths-ignore:
      - '**.md'
      - 'CD.yml'
      - 'nightly.yml'

env:
  UPLOAD_BUILD: true

jobs:
  CodeCheck:
    name: CodeCheck
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        submodules: "recursive"

    - name: cppcheck
      uses: Qful/check-action@master
      with:
        github_token: ${{ secrets.OSQ_REPO_TOKEN }}
        enable: all
        inconclusive: disable
        inline_suppression: disable
        force_language: c
        force: enable
        max_ctu_depth: 2
        std: c11
        output_file: ./codecheck.txt
        other_options: --bug-hunting --verbose --std=c11

    - name: report
      uses: Qful/check-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.OSQ_REPO_TOKEN }}
        BRANCH_NAME: 'master'

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: code_check_report
        path: codecheck.txt

  PIO:
    strategy:
      fail-fast: false
      matrix:
        example:
          - "arduino-blink"
          - "arduino-external-libs"
          - "arduino-internal-libs"
          - "arduino-mbed-doom"
          - "arduino-mbed-rpc"
          - "arduino-mxchip-azureiot"
          - "arduino-mxchip-filesystem"
          - "arduino-mxchip-sensors"
          - "arduino-mxchip-wifiscan"
          - "cmsis-blink"
          - "libopencm3-1bitsy"
          - "libopencm3-blink"
          - "libopencm3-usb-cdcacm"
          - "mbed-rtos-blink-baremetal"
          - "mbed-rtos-custom-target"
          - "mbed-rtos-ethernet-tls"
          - "mbed-rtos-events"
          - "mbed-rtos-filesystem"
          - "mbed-rtos-mesh-minimal"
          - "mbed-rtos-serial"
          - "mbed-rtos-usb-keyboard"
          - "mbed-rtos-wifi"
          - "mbed-legacy-examples/mbed-blink"
          - "mbed-legacy-examples/mbed-custom-target"
          - "mbed-legacy-examples/mbed-dsp"
          - "mbed-legacy-examples/mbed-events"
          - "mbed-legacy-examples/mbed-filesystem"
          - "mbed-legacy-examples/mbed-rtos"
          - "mbed-legacy-examples/mbed-rtos-ethernet-tls"
          - "mbed-legacy-examples/mbed-rtos-mesh-minimal"
          - "mbed-legacy-examples/mbed-serial"
          - "spl-blink"
          - "stm32cube-hal-blink"
          - "stm32cube-hal-eeprom-emulation"
          - "stm32cube-hal-extmem-boot"
          - "stm32cube-hal-iap"
          - "stm32cube-hal-lcd"
          - "stm32cube-hal-usb-device-dfu"
          - "stm32cube-hal-wifi-client"
          - "stm32cube-ll-blink"
          - "zephyr-blink"
          - "zephyr-cpp-synchronization"
          - "zephyr-drivers-can"
          - "zephyr-net-civetweb"
          - "zephyr-net-https-client"
          - "zephyr-subsys-usb-hid-mouse"
          - "tests/arduino-blink-different-cores"

        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          # fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install PIO
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          pio platform install file://.

      - name: Build examples
        id: build
        if: success()
        working-directory: examples
        run: |
          pio run -d ${{ matrix.example }} >> ${{ matrix.example }}/log.txt
          echo "::set-output name=status::success"

      - name: Upload
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: pio_${{ matrix.example }}_${{ matrix.os }}
          path: examples/${{ matrix.example }}/.pio

  pio_pass:
    needs:
      - PIO
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "PIO success"

  pio_fail:
    needs:
      - PIO
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "PIO failure"
